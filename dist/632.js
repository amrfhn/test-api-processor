"use strict";exports.id=632,exports.ids=[632],exports.modules={6632:(e,t,r)=>{r.d(t,{getDefaultRoleAssumer:()=>w,getDefaultRoleAssumerWithWebIdentity:()=>m});var n=r(40244),s=r(75592),i=r(99389),o=r(1208),c=r(28260),a=r(47207),l=r(8766),d=r(47504);class u extends(c.uB.classBuilder().ep(a.S).m((function(e,t,r,n){return[(0,o.TM)(r,this.serialize,this.deserialize),(0,i.rD)(r,e.getEndpointParameterInstructions())]})).s("AWSSecurityTokenServiceV20110615","AssumeRoleWithWebIdentity",{}).n("STSClient","AssumeRoleWithWebIdentityCommand").f(l.KT,l.AA).ser(d.$3).de(d.MV).build()){}const g="us-east-1",S=e=>{if("string"==typeof e?.Arn){const t=e.Arn.split(":");if(t.length>4&&""!==t[4])return t[4]}},p=async(e,t,r)=>{const n="function"==typeof e?await e():e,s="function"==typeof t?await t():t;return r?.debug?.("@aws-sdk/client-sts::resolveRegion","accepting first of:",`${n} (provider)`,`${s} (parent client)`,`${g} (STS default)`),n??s??g},f=(e,t)=>{let r,i;return async(o,c)=>{if(i=o,!r){const{logger:n=e?.parentClientConfig?.logger,region:s,requestHandler:o=e?.parentClientConfig?.requestHandler,credentialProviderLogger:c}=e,a=await p(s,e?.parentClientConfig?.region,c),l=!y(o);r=new t({credentialDefaultProvider:()=>async()=>i,region:a,requestHandler:l?o:void 0,logger:n})}const{Credentials:a,AssumedRoleUser:l}=await r.send(new s.Q(c));if(!a||!a.AccessKeyId||!a.SecretAccessKey)throw new Error(`Invalid response from STS.assumeRole call with role ${c.RoleArn}`);const d=S(l),u={accessKeyId:a.AccessKeyId,secretAccessKey:a.SecretAccessKey,sessionToken:a.SessionToken,expiration:a.Expiration,...a.CredentialScope&&{credentialScope:a.CredentialScope},...d&&{accountId:d}};return(0,n.g)(u,"CREDENTIALS_STS_ASSUME_ROLE","i"),u}},A=(e,t)=>{let r;return async s=>{if(!r){const{logger:n=e?.parentClientConfig?.logger,region:s,requestHandler:i=e?.parentClientConfig?.requestHandler,credentialProviderLogger:o}=e,c=await p(s,e?.parentClientConfig?.region,o),a=!y(i);r=new t({region:c,requestHandler:a?i:void 0,logger:n})}const{Credentials:i,AssumedRoleUser:o}=await r.send(new u(s));if(!i||!i.AccessKeyId||!i.SecretAccessKey)throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${s.RoleArn}`);const c=S(o),a={accessKeyId:i.AccessKeyId,secretAccessKey:i.SecretAccessKey,sessionToken:i.SessionToken,expiration:i.Expiration,...i.CredentialScope&&{credentialScope:i.CredentialScope},...c&&{accountId:c}};return c&&(0,n.g)(a,"RESOLVED_ACCOUNT_ID","T"),(0,n.g)(a,"CREDENTIALS_STS_ASSUME_ROLE_WEB_ID","k"),a}},y=e=>"h2"===e?.metadata?.handlerProtocol;var C=r(28658);const I=(e,t)=>t?class extends e{constructor(e){super(e);for(const e of t)this.middlewareStack.use(e)}}:e,w=(e={},t)=>f(e,I(C.i,t)),m=(e={},t)=>A(e,I(C.i,t))}};